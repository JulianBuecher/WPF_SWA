# Copyright (C) 2020 - present Juergen Zimmermann, Hochschule Karlsruhe
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# kubectl apply --filename backend.yml
# kubectl port-forward service/mailserver 5025 5080 --namespace acme
# kubectl port-forward service/mongodb 27017 --namespace acme

# kubectl get pods --selector app=mongodb --namespace acme
# kubectl describe pod mongodb-0 --namespace acme
# kubectl exec mongodb-0 --stdin --tty --namespace acme -- bash
# kubectl exec mongodb-0 --stdin --tty --namespace acme -- mongodb --username admin --password p --authenticationDatabase admin acme
#   hostname = mongodb-0.mongodb.acme.svc.cluster.local (siehe /etc/hosts)
#   db.kunde.find()

apiVersion: v1
kind: Namespace
metadata:
  name: acme
  labels:
    app: dev

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mailserver-env-dev
  namespace: acme
data:
  TZ: Europe/Berlin
  SPRING_OUTPUT_ANSI_ENABLED: ALWAYS
  SPRING_JPA_OPEN-IN-VIEW: "true"

---
apiVersion: v1
kind: Service
metadata:
  name: mailserver
  labels:
    app: mailserver
  namespace: acme
spec:
  selector:
    app: mailserver
  ports:
    - name: smtp
      port: 5025
    - name: http
      port: 5080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mailserver
  labels:
    version: 1.5.0
    tier: backend
  namespace: acme
spec:
  selector:
    matchLabels:
      app: mailserver
      version: 1.5.0
  replicas: 1
  template:
    metadata:
      labels:
        app: mailserver
        version: 1.5.0
    spec:
      containers:
        - image: gessnerfl/fake-smtp-server:1.5.0
          name: mailserver
          envFrom:
            - configMapRef:
                name: mailserver-env-dev
          ports:
            - containerPort: 5025
            - containerPort: 5080
            - containerPort: 5081

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-env-dev
  namespace: acme
data:
  TZ: Europe/Berlin
  MONGO_INITDB_ROOT_USERNAME: admin

---
apiVersion: v1
# fuer Umgebungsvariable MONGO_INITDB_ROOT_PASSWORD und SPRING_DATA_MONGODB_PASSWORD
kind: Secret
metadata:
  name: mongodb-password-dev
  namespace: acme
type: Opaque
data:
  # password als Key, Value mit Base64-Codierung
  password: cA==

---
# https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistent-volumes
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-volume
  labels:
    type: local
  # Ein "Persistent Volume" ist "cluster-scoped" und nicht einem Namespace zugeordnet
  #namespace: ...
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  # https://kubernetes.io/docs/concepts/storage/storage-classes
  storageClassName: hostpath
  # https://kubernetes.io/docs/concepts/storage/volumes/#hostpath
  hostPath:
    # https://github.com/docker/for-win/issues/5325 : "we don't support hostpath volumes in wsl2"
    # https://stackoverflow.com/questions/62812948/volume-mounts-not-working-kubernetes-and-wsl-2-and-docker
    path: /run/desktop/mnt/host/c/Zimmermann/volumes/mongodb
    type: DirectoryOrCreate

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  labels:
    app: mongodb
  namespace: acme
spec:
  selector:
    app: mongodb
  ports:
    - port: 27017

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  labels:
    version: 4.2.9
    tier: backend
  namespace: acme
spec:
  selector:
    matchLabels:
      app: mongodb
      version: 4.2.9
  serviceName: mongodb
  replicas: 1
  template:
    metadata:
      labels:
        app: mongodb
        version: 4.2.9
    spec:
      containers:
        - name: mongo
          image: mongo:4.2.9
          args:
            # https://docs.mongodb.com/manual/reference/configuration-file-settings-command-line-options-mapping
            # Default-Werte: /data/db, /var/log/mongodb/mongodb.log
            - "--auth"
            - "--bind_ip_all"
            - "--tlsMode"
            - disabled
            - "--wiredTigerCacheSizeGB"
            - "0.3"
          envFrom:
            - configMapRef:
                name: mongodb-env-dev
          env:
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-password-dev
                  key: password
          ports:
            - containerPort: 27017
          volumeMounts:
            - mountPath: /data/db
              name: mongodb-volume
      #terminationGracePeriodSeconds: 10
  volumeClaimTemplates:
    - metadata:
        # gleicher Name wie das anzubindende "Persistent Volume"
        name: mongodb-volume
        labels:
          type: local
        namespace: acme
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
        storageClassName: hostpath
